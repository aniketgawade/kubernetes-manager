#
# Autogenerated by Sandesh Compiler (1.0)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#
#  options string: py:new_style
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#


# This autogenerated skeleton file illustrates the implementation of
# derived class to handle the sandesh request.


# Create a derived class from "PodDatabaseList" to handle 
# the sandesh request. Add this derived class "PodDatabaseList_derived"
# in module PodDatabaseList_derived.py and add it in your package

class PodDatabaseList_derived(PodDatabaseList):

  def __init__(self):
    PodDatabaseList.__init__(self, pod_uuid=None)

  def handle_request(self):
    # Add your code to handle the "PodDatabaseList" request
    pass
  

# Create a derived class from "NamespaceDatabaseList" to handle 
# the sandesh request. Add this derived class "NamespaceDatabaseList_derived"
# in module NamespaceDatabaseList_derived.py and add it in your package

class NamespaceDatabaseList_derived(NamespaceDatabaseList):

  def __init__(self):
    NamespaceDatabaseList.__init__(self, namespace_uuid=None)

  def handle_request(self):
    # Add your code to handle the "NamespaceDatabaseList" request
    pass
  

# Create a derived class from "ServiceDatabaseList" to handle 
# the sandesh request. Add this derived class "ServiceDatabaseList_derived"
# in module ServiceDatabaseList_derived.py and add it in your package

class ServiceDatabaseList_derived(ServiceDatabaseList):

  def __init__(self):
    ServiceDatabaseList.__init__(self, service_uuid=None)

  def handle_request(self):
    # Add your code to handle the "ServiceDatabaseList" request
    pass
  

# Create a derived class from "NetworkPolicyDatabaseList" to handle 
# the sandesh request. Add this derived class "NetworkPolicyDatabaseList_derived"
# in module NetworkPolicyDatabaseList_derived.py and add it in your package

class NetworkPolicyDatabaseList_derived(NetworkPolicyDatabaseList):

  def __init__(self):
    NetworkPolicyDatabaseList.__init__(self, network_policy_uuid=None)

  def handle_request(self):
    # Add your code to handle the "NetworkPolicyDatabaseList" request
    pass
  

# Create a derived class from "IngressDatabaseList" to handle 
# the sandesh request. Add this derived class "IngressDatabaseList_derived"
# in module IngressDatabaseList_derived.py and add it in your package

class IngressDatabaseList_derived(IngressDatabaseList):

  def __init__(self):
    IngressDatabaseList.__init__(self, ingress_uuid=None)

  def handle_request(self):
    # Add your code to handle the "IngressDatabaseList" request
    pass
  

# Create a derived class from "LoadbalancerDatabaseList" to handle 
# the sandesh request. Add this derived class "LoadbalancerDatabaseList_derived"
# in module LoadbalancerDatabaseList_derived.py and add it in your package

class LoadbalancerDatabaseList_derived(LoadbalancerDatabaseList):

  def __init__(self):
    LoadbalancerDatabaseList.__init__(self, lb_uuid=None)

  def handle_request(self):
    # Add your code to handle the "LoadbalancerDatabaseList" request
    pass
  

# Create a derived class from "LoadbalancerListenerDatabaseList" to handle 
# the sandesh request. Add this derived class "LoadbalancerListenerDatabaseList_derived"
# in module LoadbalancerListenerDatabaseList_derived.py and add it in your package

class LoadbalancerListenerDatabaseList_derived(LoadbalancerListenerDatabaseList):

  def __init__(self):
    LoadbalancerListenerDatabaseList.__init__(self, lbl_uuid=None)

  def handle_request(self):
    # Add your code to handle the "LoadbalancerListenerDatabaseList" request
    pass
  

# Create a derived class from "LoadbalancerPoolDatabaseList" to handle 
# the sandesh request. Add this derived class "LoadbalancerPoolDatabaseList_derived"
# in module LoadbalancerPoolDatabaseList_derived.py and add it in your package

class LoadbalancerPoolDatabaseList_derived(LoadbalancerPoolDatabaseList):

  def __init__(self):
    LoadbalancerPoolDatabaseList.__init__(self, lbp_uuid=None)

  def handle_request(self):
    # Add your code to handle the "LoadbalancerPoolDatabaseList" request
    pass
  

# Create a derived class from "LoadbalancerMemberDatabaseList" to handle 
# the sandesh request. Add this derived class "LoadbalancerMemberDatabaseList_derived"
# in module LoadbalancerMemberDatabaseList_derived.py and add it in your package

class LoadbalancerMemberDatabaseList_derived(LoadbalancerMemberDatabaseList):

  def __init__(self):
    LoadbalancerMemberDatabaseList.__init__(self, lbm_uuid=None)

  def handle_request(self):
    # Add your code to handle the "LoadbalancerMemberDatabaseList" request
    pass
  

# Create a derived class from "HealthMonitorDatabaseList" to handle 
# the sandesh request. Add this derived class "HealthMonitorDatabaseList_derived"
# in module HealthMonitorDatabaseList_derived.py and add it in your package

class HealthMonitorDatabaseList_derived(HealthMonitorDatabaseList):

  def __init__(self):
    HealthMonitorDatabaseList.__init__(self, hm_uuid=None)

  def handle_request(self):
    # Add your code to handle the "HealthMonitorDatabaseList" request
    pass
  

# Create a derived class from "VirtualMachineDatabaseList" to handle 
# the sandesh request. Add this derived class "VirtualMachineDatabaseList_derived"
# in module VirtualMachineDatabaseList_derived.py and add it in your package

class VirtualMachineDatabaseList_derived(VirtualMachineDatabaseList):

  def __init__(self):
    VirtualMachineDatabaseList.__init__(self, vm_uuid=None)

  def handle_request(self):
    # Add your code to handle the "VirtualMachineDatabaseList" request
    pass
  

# Create a derived class from "VirtualRouterDatabaseList" to handle 
# the sandesh request. Add this derived class "VirtualRouterDatabaseList_derived"
# in module VirtualRouterDatabaseList_derived.py and add it in your package

class VirtualRouterDatabaseList_derived(VirtualRouterDatabaseList):

  def __init__(self):
    VirtualRouterDatabaseList.__init__(self, vr_uuid=None)

  def handle_request(self):
    # Add your code to handle the "VirtualRouterDatabaseList" request
    pass
  

# Create a derived class from "VirtualMachineInterfaceDatabaseList" to handle 
# the sandesh request. Add this derived class "VirtualMachineInterfaceDatabaseList_derived"
# in module VirtualMachineInterfaceDatabaseList_derived.py and add it in your package

class VirtualMachineInterfaceDatabaseList_derived(VirtualMachineInterfaceDatabaseList):

  def __init__(self):
    VirtualMachineInterfaceDatabaseList.__init__(self, vmi_uuid=None)

  def handle_request(self):
    # Add your code to handle the "VirtualMachineInterfaceDatabaseList" request
    pass
  

# Create a derived class from "VirtualNetworkDatabaseList" to handle 
# the sandesh request. Add this derived class "VirtualNetworkDatabaseList_derived"
# in module VirtualNetworkDatabaseList_derived.py and add it in your package

class VirtualNetworkDatabaseList_derived(VirtualNetworkDatabaseList):

  def __init__(self):
    VirtualNetworkDatabaseList.__init__(self, vn_uuid=None)

  def handle_request(self):
    # Add your code to handle the "VirtualNetworkDatabaseList" request
    pass
  

# Create a derived class from "InstanceIpDatabaseList" to handle 
# the sandesh request. Add this derived class "InstanceIpDatabaseList_derived"
# in module InstanceIpDatabaseList_derived.py and add it in your package

class InstanceIpDatabaseList_derived(InstanceIpDatabaseList):

  def __init__(self):
    InstanceIpDatabaseList.__init__(self, iip_uuid=None)

  def handle_request(self):
    # Add your code to handle the "InstanceIpDatabaseList" request
    pass
  

# Create a derived class from "ProjectDatabaseList" to handle 
# the sandesh request. Add this derived class "ProjectDatabaseList_derived"
# in module ProjectDatabaseList_derived.py and add it in your package

class ProjectDatabaseList_derived(ProjectDatabaseList):

  def __init__(self):
    ProjectDatabaseList.__init__(self, project_uuid=None)

  def handle_request(self):
    # Add your code to handle the "ProjectDatabaseList" request
    pass
  

# Create a derived class from "DomainDatabaseList" to handle 
# the sandesh request. Add this derived class "DomainDatabaseList_derived"
# in module DomainDatabaseList_derived.py and add it in your package

class DomainDatabaseList_derived(DomainDatabaseList):

  def __init__(self):
    DomainDatabaseList.__init__(self, domain_uuid=None)

  def handle_request(self):
    # Add your code to handle the "DomainDatabaseList" request
    pass
  

# Create a derived class from "SecurityGroupDatabaseList" to handle 
# the sandesh request. Add this derived class "SecurityGroupDatabaseList_derived"
# in module SecurityGroupDatabaseList_derived.py and add it in your package

class SecurityGroupDatabaseList_derived(SecurityGroupDatabaseList):

  def __init__(self):
    SecurityGroupDatabaseList.__init__(self, sg_uuid=None)

  def handle_request(self):
    # Add your code to handle the "SecurityGroupDatabaseList" request
    pass
  

# Create a derived class from "FloatingIpPoolDatabaseList" to handle 
# the sandesh request. Add this derived class "FloatingIpPoolDatabaseList_derived"
# in module FloatingIpPoolDatabaseList_derived.py and add it in your package

class FloatingIpPoolDatabaseList_derived(FloatingIpPoolDatabaseList):

  def __init__(self):
    FloatingIpPoolDatabaseList.__init__(self, fip_pool_uuid=None)

  def handle_request(self):
    # Add your code to handle the "FloatingIpPoolDatabaseList" request
    pass
  

# Create a derived class from "FloatingIpDatabaseList" to handle 
# the sandesh request. Add this derived class "FloatingIpDatabaseList_derived"
# in module FloatingIpDatabaseList_derived.py and add it in your package

class FloatingIpDatabaseList_derived(FloatingIpDatabaseList):

  def __init__(self):
    FloatingIpDatabaseList.__init__(self, fip_uuid=None)

  def handle_request(self):
    # Add your code to handle the "FloatingIpDatabaseList" request
    pass
  

# Create a derived class from "NetworkIpamDatabaseList" to handle 
# the sandesh request. Add this derived class "NetworkIpamDatabaseList_derived"
# in module NetworkIpamDatabaseList_derived.py and add it in your package

class NetworkIpamDatabaseList_derived(NetworkIpamDatabaseList):

  def __init__(self):
    NetworkIpamDatabaseList.__init__(self, network_ipam_uuid=None)

  def handle_request(self):
    # Add your code to handle the "NetworkIpamDatabaseList" request
    pass
  

# Create a derived class from "KubeGreenletStackList" to handle 
# the sandesh request. Add this derived class "KubeGreenletStackList_derived"
# in module KubeGreenletStackList_derived.py and add it in your package

class KubeGreenletStackList_derived(KubeGreenletStackList):


  def handle_request(self):
    # Add your code to handle the "KubeGreenletStackList" request
    pass
  

# Create a derived class from "KubeApiConnectionStatus" to handle 
# the sandesh request. Add this derived class "KubeApiConnectionStatus_derived"
# in module KubeApiConnectionStatus_derived.py and add it in your package

class KubeApiConnectionStatus_derived(KubeApiConnectionStatus):


  def handle_request(self):
    # Add your code to handle the "KubeApiConnectionStatus" request
    pass
  

# Create a derived class from "MastershipStatus" to handle 
# the sandesh request. Add this derived class "MastershipStatus_derived"
# in module MastershipStatus_derived.py and add it in your package

class MastershipStatus_derived(MastershipStatus):


  def handle_request(self):
    # Add your code to handle the "MastershipStatus" request
    pass
  
